// C++ program to evaluate truth value
#include <bits/stdc++.h>
using namespace std;

// Class to represent the atoms of parse tree
class node
{
public:
	char atom;
	node *left = NULL, *right = NULL;
	node(char x)
	{
		atom = x;
	}
};

//function to return truth value of atom
int truth(char s)
{
	int num;
		
	if(s=='0'){num = 0;}
	else{num = 1;}
	
	return num;
}

// function to receive a atmon of the parse tree and recursively evaluate it
int eval(node* root)
{
	// empty tree
	if (!root)
		return 0;

	// leaf i.e, truth value
	if (!root->left && !root->right)
		return truth(root->atom);

	// Evaluate left subtree
	int l_val = eval(root->left);

	// Evaluate right subtree
	int r_val = eval(root->right);

	// Check which operator to apply
	if (root->atom=='+')
		return l_val|r_val;

	if (root->atom=='*')
		return l_val&r_val;
		
	if(root->atom=='~')
	    return !r_val;

	return !(l_val)|(r_val);
}

// function to check the above program
int main()
{
	// create a parse tree

    node *root = new node('>');
    root->left = new node('*');
    root->left->left = new node('1');
    root->left->right = new node('1');
    root->right = new node('+');
    root->right->left = new node('~');
    root->right->left->right = new node ('1');
    root->right->right = new node('>');
    root->right->right->right= new node('0');
    root->right->right->left= new node('0');
    cout << eval(root);

	return 0;
}